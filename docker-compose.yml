version: '3'
x-airflow-common:
  &airflow-common
  build: AirflowDockerfile
  environment:
    - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql+psycopg2://postgres:postgres@postgres:5432/airflow
    - AIRFLOW__CORE__FERNET_KEY=FB0o_zt4e3Ziq3LdUUO7F2Z95cvFFx16hU8jTeR1ASM=
    - AIRFLOW__CORE__LOAD_EXAMPLES=False
    - AIRFLOW__CORE__LOGGING_LEVEL=INFO
    - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True
    - AIRFLOW__WEBSERVER__ENABLE_PROXY_FIX=True
    - AIRFLOW_HOME=/opt/airflow
  volumes:
    - ./dags:/opt/airflow/dags
    - ./airflow-data/logs:/opt/airflow/logs
    - ./airflow-data/plugins:/opt/airflow/plugins
    - ./airflow-data/airflow.cfg:/opt/airlfow/airflow.cfg
    - ./ml_module:/opt/airflow/ml_module
    - ./airflow-data/airflow.cfg:/opt/airflow/airflow.cfg

  depends_on:
    - postgres
networks:
  airflow_network:
    driver: bridge
    
services:
  postgres:
    image: postgres:12
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=airflow
      - POSTGRES_PORT=5432
    ports:
      - "5432:5432"

  airflow-init:
    << : *airflow-common
    container_name: airflow_init
    entrypoint: /bin/bash
    command:
      - -c
      -  ( airflow db init &&
        airflow users create
          --role Admin
          --username airflow
          --password airflow
          --email airflow@airflow.com
          --firstname airflow
          --lastname airflow )
    restart: on-failure

  airflow-webserver:
    << : *airflow-common
    command: airflow webserver
    ports:
      - 8080:8080
    container_name: airflow_webserver
    restart: always


  airflow-scheduler:
    << : *airflow-common
    command: airflow scheduler
    container_name: airflow_scheduler
    restart: always


  mlflow:
    build: mlflowDockerfile
    container_name: mlflow

    environment:
      - MLFLOW_TRACKING_URI=http://mlflox:5050
      - MLFLOW_S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minio
      - AWS_SECRET_ACCESS_KEY=minio123
    ports:
      - "5050:5050"
    volumes:
      - ./mlruns:/mlflow/mlruns
    extra_hosts:
      - "host.docker.internal:host-gateway"  
    restart: always
    env_file: .env
    command: mlflow server --default-artifact-root s3://mlartifactbucket/artifacts/ --host 0.0.0.0 --port 5050
    depends_on:
      minio:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5050"]
      interval: 20s
      retries: 5
      start_period: 60s
      timeout: 10s
  minio:
    image: minio/minio
    container_name: minio
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=minio123
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      retries: 3
      start_period: 30s
      timeout: 10s
    volumes:
      - ./minio_data:/data
    restart: always
    env_file: .env

  fastapi_app:
    build: fastapi
    container_name: fastapi_app
    ports:
      - "8000:8000"
    environment:
      - MLFLOW_TRACKING_URI=http://mlflow:5050
      - AIRFLOW_API_URL=http://airflow-webserver:8080/api/v1
      - AIRFLOW_USERNAME=airflow
      - AIRFLOW_PASSWORD=airflow
    extra_hosts:
      - "host.docker.internal:host-gateway"  
    restart: always
    env_file: .env
